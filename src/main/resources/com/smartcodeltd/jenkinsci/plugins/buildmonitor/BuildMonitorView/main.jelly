<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define"
         xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form"
         xmlns:i="jelly:fmt">

    <l:layout>

        <j:set var="resourcesURL" value="${resURL}/plugin/build-monitor" />
        <j:set var="jobsURL" value="${rootURL}/job" />
        <j:set var="angularVersion" value="1.0.7" />

        <l:header>
            <link rel="stylesheet" href="//fonts.googleapis.com/css?family=Open+Sans:400,700"/>
            <link rel="stylesheet" href="${resourcesURL}/css/normalize.css"/>
            <link rel="stylesheet" href="${resourcesURL}/css/bootstrap-combined.2.3.2.min.css"/>
            <link rel="stylesheet" href="${resourcesURL}/css/industrial.css"/>
            <style type="text/css">
                .dashboard { background: url('${resourcesURL}/images/background.png'); }
                .config { background: url('${imagesURL}/16x16/help.png') top right no-repeat #73bfff; }
            </style>

            <script src="//ajax.googleapis.com/ajax/libs/angularjs/${angularVersion}/angular.min.js"></script>
            <script>window.angular || document.write('\x3Cscript src="${resourcesURL}/libs/angular-${angularVersion}.min.js">\x3C/script>')</script>
            <script src="${resourcesURL}/libs/ui-bootstrap-custom-tpls-0.4.0.js"></script>


            <script>
                var buildMonitor = angular.
                    module('buildMonitor', ['ui.bootstrap.dialog', 'template/dialog/message.html']).
                    service('notifyUser', function($dialog, $window) {
                        this.about = function(problemStatus) {

                            var title   = "Sorry to bother you, but there is a slight issue ..."
                            var message = "Jenkins returned a \"" + problemStatus + "\" response " +
                                          "causing the last request to fail. " +
                                          "This usually means a network connection problem " +
                                          "or that Jenkins is being restarted. " +
                                          "Don't worry, reloading the page should help :-)";

                            $dialog.messageBox(title, message, [
                                { result: "reload", label: "Reload the page"}
                            ]).open().then(function(result) {
                                $window.location.reload();
                            });
                        }
                    }).
                    service('fetch', function($q, $rootScope) {
                        // TODO: This seems to be a cool way of integrating legacy code: http://jsfiddle.net/d8vX3/1/
                        var proxy   = <st:bind value="${it}"/>;

                        this.current = function() {
                            var deferred = $q.defer();

                            proxy.fetchJobViews(function(response) {

                                if (response.status === 200) {
                                    deferred.resolve(response.responseObject());
                                } else {
                                    deferred.reject({ status: response.status });
                                }

                                $rootScope.$apply();
                            });

                            return deferred.promise;
                        }
                    }).

                    controller('JobViewsController', function($scope, $rootScope, $dialog, $timeout, fetch) {
                        $scope.jobs = {};

                        var update = function() {
                            var updating;
                            fetch.current().then(function(current) {
                                $scope.jobs = current.jobs;
                                updating = $timeout(update, 5000)
                            }, function(error) {
                                $timeout.cancel(updating);
                                $rootScope.$broadcast("communication-error", error);
                            });
                        }

                        update();
                    }).

                    run(function($rootScope, notifyUser) {
                        $rootScope.$on('communication-error', function(event, error) {
                            notifyUser.about(error.status);
                        });
                    });
            </script>
        </l:header>

        <l:main-panel>
            <div class="build-monitor dashboard" data-ng-app="buildMonitor">
                <header>
                    <h1>${it.displayName}</h1>
                </header>

                <st:include page="main-config.jelly"/>

                <ul id="job-views" data-ng-controller="JobViewsController" ng-init="updateJobs()">
                    <li ng-repeat="job in jobs" class="{{job.status}}">
                        <div class="progress" style="width: {{job.progress}}%">
                            <span>{{job.progress}}%</span>
                        </div>

                        <div class="meta">
                            <h2>
                                <a title="{{job.name}}"
                                   href="${jobsURL}/{{job.name}}">{{job.name}}</a>
                            </h2>
                            <ul data-ng-show="job.culprits.size() > 0" class="culprits">
                                <li data-ng-repeat="name in job.culprits">
                                    {{name}}
                                </li>
                            </ul>
                            <a data-ng-show="!!job.buildNumber" class="build-number"
                               title="Console output for {{job.name}}, build #{{job.buildNumber}}"
                               href="${jobsURL}/{{job.name}}/{{job.buildNumber}}/console">#{{job.buildNumber}}</a>
                        </div>
                    </li>
                </ul>

                <footer>
                    <a href="http://smartcodeltd.co.uk" rel="external">Build Monitor plugin developed by Jan Molak</a>
                </footer>
            </div>
        </l:main-panel>
    </l:layout>
</j:jelly>